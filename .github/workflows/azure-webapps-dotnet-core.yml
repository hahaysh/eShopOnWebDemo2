name: Deploy to PROD with Slots


on:
  workflow_dispatch:

env:
  env_var: ${{ vars.ENV_CONTEXT_VAR }}
  
jobs:  
 deploy:
    environment: Production    
    runs-on: ubuntu-latest
    steps:
      - name: Print value
        run: |
           echo ${{ vars.DOTNET_VERSION }}
           echo ${{ vars.AZURE_RG }}
           echo ${{ vars.AZURE_WEBAPP_NAME }}

      - name: checkout the repository
        uses: actions/checkout@v3
    
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
            dotnet-version: ${{ vars.DOTNET_VERSION }}
    
      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
            path: ~/.nuget/packages
            key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
            restore-keys: |
              ${{ runner.os }}-nuget-
    
    
      - name: Build with dotnet
        run: dotnet build ./eShopOnWeb.sln --configuration Release
    
      - name: dotnet publish
        run: dotnet publish ./src/Web/Web.csproj -c Release -o ${{env.DOTNET_ROOT}}/myapp
    
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
            name: .net-app
            path: ${{env.DOTNET_ROOT}}/myapp

      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app
          path: .net-app
    
      - name: Log into Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
    
      - name: Deploy to Slot in Azure Web App1
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          resource-group-name: ${{ vars.AZURE_RG }}
          app-name: ${{ vars.AZURE_WEBAPP_NAME }}
          slot-name: "${{ vars.AZURE_WEBAPP_SLOT_NAME }}" 
          package: .net-app

      - name: Swap staging slot into production
        id: slot_swap
        run: |
          az webapp deployment slot swap -g ${{ vars.AZURE_RG }} -n ${{ vars.AZURE_WEBAPP_NAME }} -s stage
          url=$(az webapp show -g ${{ vars.AZURE_RG }} -n ${{ vars.AZURE_WEBAPP_NAME }} --query "defaultHostName" -o tsv)
          echo "::set-output name=url::http://$url"         

      - name: az cli logout
        run: az logout


        
